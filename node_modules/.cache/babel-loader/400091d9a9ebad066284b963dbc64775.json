{"ast":null,"code":"function bfs(startNode,endNode){var q=[];var visited=[];var finalPath=[];q.push(startNode);var _loop=function _loop(){var current=q[0];if(current==endNode){console.log(\"Done Done Done !!!\");var temp=current;finalPath.push(temp);while(temp.previous){finalPath.push(temp.previous);temp=temp.previous;}return{v:{finalPath:finalPath,visited:visited}};}q=q.filter(function(elt){return elt!==current;});visited.push(current);for(var nbPos=0;nbPos<current.neighbors.length;nbPos++){var neighbor=current.neighbors[nbPos];if(document.getElementById(\"node-\".concat(neighbor.x,\"-\").concat(neighbor.y)).className=='node-wall'){continue;}if(!visited.includes(neighbor)){if(!q.includes(neighbor)){q.push(neighbor);neighbor.previous=current;}}}};while(q.length>0){var _ret=_loop();if(typeof _ret===\"object\")return _ret.v;}return{finalPath:finalPath,visited:visited,error:'No Path Found!!!'};}export default bfs;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Pathfinding-Visualizer-ReactJS-master/src/main/components/bfs/bfs.js"],"names":["bfs","startNode","endNode","q","visited","finalPath","push","current","console","log","temp","previous","filter","elt","nbPos","neighbors","length","neighbor","document","getElementById","x","y","className","includes","error"],"mappings":"AAAA,QAASA,CAAAA,GAAT,CAAcC,SAAd,CAAyBC,OAAzB,CAAkC,CAC9B,GAAIC,CAAAA,CAAC,CAAG,EAAR,CACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CAEAF,CAAC,CAACG,IAAF,CAAOL,SAAP,EAL8B,2BAO1B,GAAIM,CAAAA,OAAO,CAAGJ,CAAC,CAAC,CAAD,CAAf,CACA,GAAII,OAAO,EAAIL,OAAf,CAAwB,CACpBM,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAEA,GAAIC,CAAAA,IAAI,CAAGH,OAAX,CACAF,SAAS,CAACC,IAAV,CAAeI,IAAf,EACA,MAAOA,IAAI,CAACC,QAAZ,CAAsB,CAClBN,SAAS,CAACC,IAAV,CAAeI,IAAI,CAACC,QAApB,EACAD,IAAI,CAAGA,IAAI,CAACC,QAAZ,CACH,CAED,SAAO,CAACN,SAAS,CAATA,SAAD,CAAYD,OAAO,CAAPA,OAAZ,CAAP,EACH,CAEDD,CAAC,CAAGA,CAAC,CAACS,MAAF,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,GAAGN,OAAV,EAAZ,CAAJ,CACAH,OAAO,CAACE,IAAR,CAAaC,OAAb,EAEA,IAAK,GAAIO,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAGP,OAAO,CAACQ,SAAR,CAAkBC,MAA9C,CAAuDF,KAAK,EAA5D,CAAgE,CAC5D,GAAIG,CAAAA,QAAQ,CAAGV,OAAO,CAACQ,SAAR,CAAkBD,KAAlB,CAAf,CAEA,GAAII,QAAQ,CAACC,cAAT,gBAAgCF,QAAQ,CAACG,CAAzC,aAA8CH,QAAQ,CAACI,CAAvD,GAA4DC,SAA5D,EAAyE,WAA7E,CAA0F,CACtF,SACH,CAED,GAAI,CAAClB,OAAO,CAACmB,QAAR,CAAiBN,QAAjB,CAAL,CAAiC,CAC7B,GAAI,CAACd,CAAC,CAACoB,QAAF,CAAWN,QAAX,CAAL,CAA2B,CACvBd,CAAC,CAACG,IAAF,CAAOW,QAAP,EACAA,QAAQ,CAACN,QAAT,CAAoBJ,OAApB,CACH,CACJ,CACJ,CArCyB,EAM9B,MAAOJ,CAAC,CAACa,MAAF,CAAW,CAAlB,CAAqB,0DAgCpB,CAED,MAAO,CAACX,SAAS,CAATA,SAAD,CAAYD,OAAO,CAAPA,OAAZ,CAAqBoB,KAAK,CAAC,kBAA3B,CAAP,CACH,CAED,cAAexB,CAAAA,GAAf","sourcesContent":["function bfs( startNode, endNode ){\n    let q = [];\n    let visited = [];\n    let finalPath = [];\n\n    q.push(startNode);\n    while( q.length > 0 ){\n        let current = q[0];\n        if( current == endNode ){\n            console.log(\"Done Done Done !!!\");\n\n            let temp = current;\n            finalPath.push(temp);\n            while( temp.previous ){\n                finalPath.push(temp.previous);\n                temp = temp.previous;\n            }\n\n            return {finalPath, visited};\n        }\n\n        q = q.filter(elt => elt!==current);\n        visited.push(current);\n\n        for( let nbPos = 0; nbPos < current.neighbors.length ; nbPos++ ){\n            let neighbor = current.neighbors[nbPos];\n\n            if( document.getElementById(`node-${neighbor.x}-${neighbor.y}`).className == 'node-wall' ){\n                continue;\n            }\n\n            if( !visited.includes(neighbor) ){\n                if( !q.includes(neighbor) ){\n                    q.push(neighbor);\n                    neighbor.previous = current;       \n                }\n            }\n        }\n    }\n\n    return {finalPath, visited, error:'No Path Found!!!'};\n}\n\nexport default bfs;\n"]},"metadata":{},"sourceType":"module"}