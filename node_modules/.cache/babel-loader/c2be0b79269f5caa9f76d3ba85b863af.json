{"ast":null,"code":"import{scryRenderedComponentsWithType}from\"react-dom/test-utils\";function simpleMaze(startNode,endNode,rows,cols){var walls=[];var random_0_1=[0,1,1,1];for(var i=0;i<rows;i++){for(var j=0;j<cols;j++){if(!(startNode.x==i&&startNode.y==j)){if(!(endNode.x==i&&endNode.y==j)){var random=Math.floor(Math.random()*random_0_1.length);if(random_0_1[random]==0){walls.push([i,j]);}}}}}return walls;}export default simpleMaze;","map":{"version":3,"sources":["D:/PM/New folder/Pathfinding-Visualizer-ReactJS-master/src/main/components/simpleMaze/simpleMaze.js"],"names":["scryRenderedComponentsWithType","simpleMaze","startNode","endNode","rows","cols","walls","random_0_1","i","j","x","y","random","Math","floor","length","push"],"mappings":"AAAA,OAASA,8BAAT,KAA+C,sBAA/C,CAEA,QAASC,CAAAA,UAAT,CAAqBC,SAArB,CAAgCC,OAAhC,CAAyCC,IAAzC,CAA+CC,IAA/C,CAAqD,CACjD,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CAEA,GAAIC,CAAAA,UAAU,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAjB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAaA,CAAC,CAACJ,IAAf,CAAoBI,CAAC,EAArB,CAAyB,CACrB,IAAK,GAAIC,CAAAA,CAAC,CAAC,CAAX,CAAaA,CAAC,CAACJ,IAAf,CAAoBI,CAAC,EAArB,CAAyB,CACrB,GAAI,EAAEP,SAAS,CAACQ,CAAV,EAAeF,CAAf,EAAoBN,SAAS,CAACS,CAAV,EAAeF,CAArC,CAAJ,CAA6C,CACzC,GAAI,EAAEN,OAAO,CAACO,CAAR,EAAaF,CAAb,EAAkBL,OAAO,CAACQ,CAAR,EAAaF,CAAjC,CAAJ,CAAyC,CACrC,GAAIG,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,GAAgBL,UAAU,CAACQ,MAAtC,CAAb,CACA,GAAIR,UAAU,CAACK,MAAD,CAAV,EAAsB,CAA1B,CAA6B,CACzBN,KAAK,CAACU,IAAN,CAAW,CAACR,CAAD,CAAIC,CAAJ,CAAX,EACH,CACJ,CACJ,CAEJ,CACJ,CAED,MAAOH,CAAAA,KAAP,CACH,CAED,cAAeL,CAAAA,UAAf","sourcesContent":["import { scryRenderedComponentsWithType } from \"react-dom/test-utils\";\n\nfunction simpleMaze( startNode, endNode, rows, cols ){\n    let walls = [];\n\n    let random_0_1 = [0, 1, 1, 1];\n\n    for( let i=0;i<rows;i++ ){\n        for( let j=0;j<cols;j++ ){\n            if( !(startNode.x == i && startNode.y == j) ){\n                if( !(endNode.x == i && endNode.y == j) ){\n                    let random = Math.floor(Math.random() * random_0_1.length);\n                    if( random_0_1[random] == 0 ){\n                        walls.push([i, j]);\n                    }\n                }\n            }\n\n        }\n    }\n\n    return walls;\n}\n\nexport default simpleMaze;\n"]},"metadata":{},"sourceType":"module"}