{"ast":null,"code":"function astar(startNode,endNode){var q=[];var visited=[];var finalPath=[];q.push(startNode);var _loop=function _loop(){var minPos=0;for(var i=0;i<q.length;i++){if(q[i].score<q[minPos].score){minPos=i;}}var current=q[minPos];if(current==endNode){console.log(\"Done Done Done !!!\");var temp=current;finalPath.push(temp);while(temp.previous){finalPath.push(temp.previous);temp=temp.previous;}return{v:{finalPath:finalPath,visited:visited}};}q=q.filter(function(elt){return elt!==current;});visited.push(current);for(var nbPos=0;nbPos<current.neighbors.length;nbPos++){var neighbor=current.neighbors[nbPos];if(document.getElementById(\"node-\".concat(neighbor.x,\"-\").concat(neighbor.y)).className=='node-wall'){continue;}if(!visited.includes(neighbor)){var temp_gScore=current.gScore+1;var newPath=false;if(q.includes(neighbor)){if(temp_gScore<neighbor.gScore){neighbor.gScore=temp_gScore;newPath=true;}}else{neighbor.gScore=temp_gScore;newPath=true;q.push(neighbor);}if(newPath){neighbor.hScore=heruistic(neighbor,endNode);neighbor.score=neighbor.gScore+neighbor.hScore;neighbor.previous=current;}}}};while(q.length>0){var _ret=_loop();if(typeof _ret===\"object\")return _ret.v;}return{finalPath:finalPath,visited:visited,error:'No Path Found!!!'};}function heruistic(start,end){var dx=Math.abs(start.x-end.x)*Math.abs(start.x-end.x);var dy=Math.abs(start.y-end.y)*Math.abs(start.y-end.y);return Math.sqrt(dx+dy);}export default astar;","map":{"version":3,"sources":["D:/PM/New folder/Pathfinding-Visualizer-ReactJS-master/src/main/components/aStar/a_star.js"],"names":["astar","startNode","endNode","q","visited","finalPath","push","minPos","i","length","score","current","console","log","temp","previous","filter","elt","nbPos","neighbors","neighbor","document","getElementById","x","y","className","includes","temp_gScore","gScore","newPath","hScore","heruistic","error","start","end","dx","Math","abs","dy","sqrt"],"mappings":"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","sourcesContent":["function astar( startNode, endNode ){\n    let q = [];\n    let visited = [];\n    let finalPath = [];\n\n    q.push(startNode);\n    while( q.length > 0 ){\n        let minPos = 0;\n        for( let i=0;i<q.length;i++ ){\n            if( q[i].score < q[minPos].score ){\n                minPos = i;\n            }\n        }\n\n        let current = q[minPos];\n        if( current == endNode ){\n            console.log(\"Done Done Done !!!\");\n\n            let temp = current;\n            finalPath.push(temp);\n            while( temp.previous ){\n                finalPath.push(temp.previous);\n                temp = temp.previous;\n            }\n\n            return {finalPath, visited};\n        }\n\n        q = q.filter(elt => elt!==current);\n        visited.push(current);\n\n        for( let nbPos = 0; nbPos < current.neighbors.length ; nbPos++ ){\n            let neighbor = current.neighbors[nbPos];\n\n            if( document.getElementById(`node-${neighbor.x}-${neighbor.y}`).className == 'node-wall' ){\n                continue;\n            }\n\n            if( !visited.includes(neighbor) ){\n                let temp_gScore = current.gScore + 1;\n                let newPath = false;\n                if( q.includes(neighbor) ){\n                    if( temp_gScore < neighbor.gScore ){\n                        neighbor.gScore = temp_gScore;\n                        newPath = true;\n                    }\n                }\n                else{\n                    neighbor.gScore = temp_gScore;\n                    newPath = true;\n                    q.push(neighbor);\n                }\n\n                if( newPath ){\n                    neighbor.hScore = heruistic(neighbor, endNode);\n                    neighbor.score = neighbor.gScore + neighbor.hScore;\n                    neighbor.previous = current;\n                }\n            }\n        }\n    }\n\n    return {finalPath, visited, error:'No Path Found!!!'};\n}\n\nfunction heruistic( start, end ){\n    let dx = Math.abs(start.x - end.x) * Math.abs(start.x - end.x);\n    let dy = Math.abs(start.y - end.y) * Math.abs(start.y - end.y);\n    return Math.sqrt( dx + dy );\n}\n\nexport default astar;\n"]},"metadata":{},"sourceType":"module"}